// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _07_Store;

#nullable disable

namespace _07_Store.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20250923183136_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_07_Store.Entytis.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Groceries"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clothes"
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Kyiv"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "Lviv"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Warsaw"
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Countries", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poland"
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Positions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cashier"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Seller"
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<double>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<bool>("IsInStock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Discount = 0.10000000000000001,
                            IsInStock = true,
                            Name = "Smartphone X",
                            Price = 799.99m,
                            Quantity = 50
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Discount = 0.0,
                            IsInStock = true,
                            Name = "Milk 1L",
                            Price = 1.49m,
                            Quantity = 200
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Discount = 0.0,
                            IsInStock = true,
                            Name = "T-Shirt",
                            Price = 19.99m,
                            Quantity = 120
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.Shop", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Khreshchatyk 1",
                            CityId = 1,
                            Name = "Central Shop",
                            ParkingArea = 20
                        },
                        new
                        {
                            Id = 2,
                            Address = "Shevchenka 10",
                            CityId = 2,
                            Name = "West Mall",
                            ParkingArea = 50
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.ShopProduct", b =>
                {
                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("ShopId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ShopProducts", (string)null);

                    b.HasData(
                        new
                        {
                            ShopId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            ShopId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            ShopId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            ShopId = 2,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("nvarchar(120)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopId");

                    b.ToTable("Workers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivan.petrov@example.com",
                            Name = "Ivan",
                            PhoneNumber = "+380501112233",
                            PositionId = 1,
                            Salary = 1200.00m,
                            ShopId = 1,
                            Surname = "Petrov"
                        },
                        new
                        {
                            Id = 2,
                            Email = "olena.shev@example.com",
                            Name = "Olena",
                            PhoneNumber = "+380671112244",
                            PositionId = 2,
                            Salary = 700.00m,
                            ShopId = 1,
                            Surname = "Shevchenko"
                        },
                        new
                        {
                            Id = 3,
                            Email = "piotr.nowak@example.com",
                            Name = "Piotr",
                            PhoneNumber = "+48 501 11 22 33",
                            PositionId = 3,
                            Salary = 900.00m,
                            ShopId = 2,
                            Surname = "Nowak"
                        });
                });

            modelBuilder.Entity("_07_Store.Entytis.City", b =>
                {
                    b.HasOne("_07_Store.Entytis.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_07_Store.Entytis.Product", b =>
                {
                    b.HasOne("_07_Store.Entytis.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_07_Store.Entytis.Shop", b =>
                {
                    b.HasOne("_07_Store.Entytis.City", "City")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("_07_Store.Entytis.ShopProduct", b =>
                {
                    b.HasOne("_07_Store.Entytis.Product", "Product")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_07_Store.Entytis.Shop", "Shop")
                        .WithMany("ShopProducts")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_07_Store.Entytis.Worker", b =>
                {
                    b.HasOne("_07_Store.Entytis.Position", "Position")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("_07_Store.Entytis.Shop", "Shop")
                        .WithMany("Workers")
                        .HasForeignKey("ShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");

                    b.Navigation("Shop");
                });

            modelBuilder.Entity("_07_Store.Entytis.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("_07_Store.Entytis.City", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("_07_Store.Entytis.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("_07_Store.Entytis.Position", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("_07_Store.Entytis.Product", b =>
                {
                    b.Navigation("ShopProducts");
                });

            modelBuilder.Entity("_07_Store.Entytis.Shop", b =>
                {
                    b.Navigation("ShopProducts");

                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
