// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _05_Entity_Framework;

#nullable disable

namespace _05_Entity_Framework.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20250919143305_New_Variables")]
    partial class New_Variables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ArtistId")
                        .HasColumnType("int");

                    b.Property<int>("GenreId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArtistId");

                    b.HasIndex("GenreId");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArtistId = 1,
                            GenreId = 1,
                            Rating = 0,
                            Title = "Greatest Hits",
                            Year = 2010
                        },
                        new
                        {
                            Id = 2,
                            ArtistId = 2,
                            GenreId = 2,
                            Rating = 0,
                            Title = "Soft Sounds",
                            Year = 2015
                        },
                        new
                        {
                            Id = 3,
                            ArtistId = 3,
                            GenreId = 5,
                            Rating = 0,
                            Title = "Nordic Beats",
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            ArtistId = 4,
                            GenreId = 4,
                            Rating = 0,
                            Title = "Folk Tales",
                            Year = 2012
                        },
                        new
                        {
                            Id = 5,
                            ArtistId = 5,
                            GenreId = 2,
                            Rating = 0,
                            Title = "Green Days",
                            Year = 2020
                        },
                        new
                        {
                            Id = 6,
                            ArtistId = 2,
                            GenreId = 3,
                            Rating = 0,
                            Title = "Smooth Jazz",
                            Year = 2016
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Artist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 2,
                            FirstName = "Emma",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 3,
                            FirstName = "Max",
                            LastName = "Johansson"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 4,
                            FirstName = "Oleg",
                            LastName = "Ivanov"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 5,
                            FirstName = "Alice",
                            LastName = "Green"
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Workout"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Chill"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Party"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Focus"
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Name = "UK"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sweden"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ukraine"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Canada"
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Rock"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Jazz"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Classical"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Electronic"
                        },
                        new
                        {
                            Id = 6,
                            Name = "HipHop"
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Playlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Playlists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Morning Boost"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Name = "Evening Chill"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Name = "Party Hits"
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.PlaylistTrack", b =>
                {
                    b.Property<int>("PlaylistId")
                        .HasColumnType("int");

                    b.Property<int>("TrackId")
                        .HasColumnType("int");

                    b.HasKey("PlaylistId", "TrackId");

                    b.HasIndex("TrackId");

                    b.ToTable("PlaylistTracks");

                    b.HasData(
                        new
                        {
                            PlaylistId = 1,
                            TrackId = 1
                        },
                        new
                        {
                            PlaylistId = 1,
                            TrackId = 5
                        },
                        new
                        {
                            PlaylistId = 1,
                            TrackId = 9
                        },
                        new
                        {
                            PlaylistId = 2,
                            TrackId = 3
                        },
                        new
                        {
                            PlaylistId = 2,
                            TrackId = 6
                        },
                        new
                        {
                            PlaylistId = 2,
                            TrackId = 11
                        },
                        new
                        {
                            PlaylistId = 2,
                            TrackId = 12
                        },
                        new
                        {
                            PlaylistId = 3,
                            TrackId = 2
                        },
                        new
                        {
                            PlaylistId = 3,
                            TrackId = 4
                        },
                        new
                        {
                            PlaylistId = 3,
                            TrackId = 10
                        },
                        new
                        {
                            PlaylistId = 3,
                            TrackId = 5
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Track", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlbumId")
                        .HasColumnType("int");

                    b.Property<int>("DurationSeconds")
                        .HasColumnType("int");

                    b.Property<int>("Listens")
                        .HasColumnType("int");

                    b.Property<string>("Lyrics")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("AlbumId");

                    b.ToTable("Tracks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AlbumId = 1,
                            DurationSeconds = 240,
                            Listens = 0,
                            Rating = 0,
                            Title = "Hit One"
                        },
                        new
                        {
                            Id = 2,
                            AlbumId = 1,
                            DurationSeconds = 200,
                            Listens = 0,
                            Rating = 0,
                            Title = "Hit Two"
                        },
                        new
                        {
                            Id = 3,
                            AlbumId = 2,
                            DurationSeconds = 180,
                            Listens = 0,
                            Rating = 0,
                            Title = "Soft Intro"
                        },
                        new
                        {
                            Id = 4,
                            AlbumId = 2,
                            DurationSeconds = 210,
                            Listens = 0,
                            Rating = 0,
                            Title = "Soft Ballad"
                        },
                        new
                        {
                            Id = 5,
                            AlbumId = 3,
                            DurationSeconds = 300,
                            Listens = 0,
                            Rating = 0,
                            Title = "Nordic Storm"
                        },
                        new
                        {
                            Id = 6,
                            AlbumId = 3,
                            DurationSeconds = 260,
                            Listens = 0,
                            Rating = 0,
                            Title = "Nordic Calm"
                        },
                        new
                        {
                            Id = 7,
                            AlbumId = 4,
                            DurationSeconds = 220,
                            Listens = 0,
                            Rating = 0,
                            Title = "Folk Song 1"
                        },
                        new
                        {
                            Id = 8,
                            AlbumId = 4,
                            DurationSeconds = 195,
                            Listens = 0,
                            Rating = 0,
                            Title = "Folk Song 2"
                        },
                        new
                        {
                            Id = 9,
                            AlbumId = 5,
                            DurationSeconds = 230,
                            Listens = 0,
                            Rating = 0,
                            Title = "Green Day 1"
                        },
                        new
                        {
                            Id = 10,
                            AlbumId = 5,
                            DurationSeconds = 205,
                            Listens = 0,
                            Rating = 0,
                            Title = "Green Day 2"
                        },
                        new
                        {
                            Id = 11,
                            AlbumId = 6,
                            DurationSeconds = 250,
                            Listens = 0,
                            Rating = 0,
                            Title = "Smooth Flow"
                        },
                        new
                        {
                            Id = 12,
                            AlbumId = 6,
                            DurationSeconds = 275,
                            Listens = 0,
                            Rating = 0,
                            Title = "Jazz Night"
                        });
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Album", b =>
                {
                    b.HasOne("_05_Entity_Framework.Entytis.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_05_Entity_Framework.Entytis.Genre", "Genre")
                        .WithMany("Albums")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Artist", b =>
                {
                    b.HasOne("_05_Entity_Framework.Entytis.Country", "Country")
                        .WithMany("Artists")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Playlist", b =>
                {
                    b.HasOne("_05_Entity_Framework.Entytis.Category", "Category")
                        .WithMany("Playlists")
                        .HasForeignKey("CategoryId");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.PlaylistTrack", b =>
                {
                    b.HasOne("_05_Entity_Framework.Entytis.Playlist", "Playlist")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("PlaylistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_05_Entity_Framework.Entytis.Track", "Track")
                        .WithMany("PlaylistTracks")
                        .HasForeignKey("TrackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Playlist");

                    b.Navigation("Track");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Track", b =>
                {
                    b.HasOne("_05_Entity_Framework.Entytis.Album", "Album")
                        .WithMany("Tracks")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Album");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Album", b =>
                {
                    b.Navigation("Tracks");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Artist", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Category", b =>
                {
                    b.Navigation("Playlists");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Country", b =>
                {
                    b.Navigation("Artists");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Genre", b =>
                {
                    b.Navigation("Albums");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Playlist", b =>
                {
                    b.Navigation("PlaylistTracks");
                });

            modelBuilder.Entity("_05_Entity_Framework.Entytis.Track", b =>
                {
                    b.Navigation("PlaylistTracks");
                });
#pragma warning restore 612, 618
        }
    }
}
